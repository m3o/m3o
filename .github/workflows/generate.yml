name: Generate Clients & Examples
on:
  push:
    branches:
      - main
      - fixgen2
  repository_dispatch:
    types: [micro_services]
    
jobs:
  generate:
    name: Generate Clients
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.13
        uses: actions/setup-go@v2
        with:
          go-version: 1.13
        id: go

      - name: Install Protoc
        uses: arduino/setup-protoc@master

      - name: Check m3o repo
        uses: actions/checkout@v2
        with:
          path: m3o
          ref: main

      - name: Check services repo
        uses: actions/checkout@v2
        with:
          repository: 'micro/services'
          path: services

      - name: Check micro repo
        uses: actions/checkout@v2
        with:
          repository: 'micro/micro'
          path: 'micro'
          ref: 'master'

      - name: Enable caching
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install protoc gen micro plugin
        working-directory: micro/cmd/protoc-gen-micro
        run: |
          go get -u github.com/golang/protobuf/protoc-gen-go
          go install

      - name: Install openapi plugin
        working-directory: micro/cmd/protoc-gen-openapi
        run: |
          go install
          
      - name: Install generator
        working-directory: m3o
        run: |
          pwd
          cd cmd/clients;
          go install

      - name: install prettier
        working-directory: services
        run: |
          sudo npm install -g prettier

      - name: Generate package
        working-directory: services
        if: github.ref == 'refs/heads/main'
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          rm -rf clients examples
          clients .
      
      - name: Generate beta package
        working-directory: services
        if: github.ref == 'refs/heads/beta'
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          IS_BETA: yup
        run: |
          clients .

      - name: Copy clients/examples
        working-directory: m3o
        run: |
          rm -rf clients/go && rm -rf clients/js && rm -rf clients/curl
          rm -rf examples/go && rm -rf examples/js && rm -rf examples/curl
          cp -r ../services/clients/* clients/.
          cp -r ../services/examples/* examples/.

      - name: Pushes files
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source_file: 'services/clients/go'
          destination_repo: 'm3o/m3o-go'
          github_server: 'github.com'
          user_name: 'm3o-actions'
          commit_message: 'Commit from m3o/m3o action'

      - name: publish npm clients
        working-directory: m3o
        if: github.ref == 'refs/heads/main'
        run: |
          git status
          cd clients/ts;
          npm install
          npm run build
          npm publish --access public

      - name: publish npm beta clients
        working-directory: m3o
        if: github.ref == 'refs/heads/beta'
        run: |
          git status
          cd clients/ts;
          npm install
          npm run build
          npm publish --access public --tag beta

      - name: install postman converter
        working-directory: services
        run: |
          sudo npm install -g openapi-to-postmanv2
          openapi2postmanv2 -h

      - name: Generate openapi spec and publish the api
        working-directory: services
        if: github.ref == 'refs/heads/main'
        run: |
          go run cmd/publisher/main.go .
        env:
          MICRO_ADMIN_TOKEN: ${{ secrets.MICRO_ADMIN_TOKEN }}

